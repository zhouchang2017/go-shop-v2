version: "3.4"

services:
  rabbitmq:
    image: zhouchang2018/rabbitmq:3.8.3-management
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: 12345678
    volumes:
      - ./docker/rabbitmq:/var/lib/rabbitmq
    networks:
      - overlay
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager

  redis:
    image: redis
    ports:
      - 63790:6379
    environment:
      TZ: "Asia/Shanghai"
    volumes:
      # - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
      - ./docker/redis/data:/data
    networks:
      - overlay
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager


  # MongoDB ReplicaSet
  mongo_rs1:
    image: mongo:latest
    command: --bind_ip_all --replSet rs0 --auth --keyFile /etc/mongod-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      TZ: "Asia/Shanghai"
    volumes:
      - ./docker_init/mongodb/cmd:/root:ro # Initialize script
      - ./docker_init/mongodb/etc/mongod-keyfile:/etc/mongod-keyfile:ro # Permission: 600
      - ./docker/mongodb-primary/data:/data/db
    networks:
      - overlay
    ports:
      - 27017:27017
    depends_on:
      - mongo_rs2
      - mongo_rs3
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager

  mongo_rs2:
    image: mongo:latest
    command: --bind_ip_all --replSet rs0 --auth --keyFile /etc/mongod-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      TZ: "Asia/Shanghai"
    volumes:
      - ./docker_init/mongodb/etc/mongod-keyfile:/etc/mongod-keyfile:ro # Permission: 600
      - ./docker/mongodb-secondary/data:/data/db
    ports:
      - 27018:27017
    networks:
      - overlay
    depends_on:
      - mongodb-arbiter
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager

  mongo_rs3:
    image: mongo:latest
    command: --bind_ip_all --replSet rs0 --auth --keyFile /etc/mongod-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      TZ: "Asia/Shanghai"
    volumes:
      - ./docker_init/mongodb/etc/mongod-keyfile:/etc/mongod-keyfile:ro # Permission: 600
      - ./docker/mongodb-arbiter/data:/data/db
    networks:
      - overlay
    ports:
      - 27019:27017
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager
networks:
  overlay:
    external: true